\"use client\";\n\nimport React, { useRef, Suspense } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\n\n// Placeholder component for the actual 3D model\n// Replace 'path/to/your/brain_model.glb' with the actual path to your GLB file\nfunction BrainModel({ modelPath = \"path/to/your/brain_model.glb\", ...props }) {\n  const ref = useRef();\n  // const { scene } = useGLTF(modelPath); // Uncomment when model is available\n\n  // Basic rotation animation\n  useFrame((state, delta) => {\n    if (ref.current) {\n      ref.current.rotation.y += delta * 0.3;\n    }\n  });\n\n  // Placeholder geometry until model is loaded\n  return (\n    <mesh ref={ref} {...props} scale={1.5}> \n      <sphereGeometry args={[1, 32, 32]} />\n      <meshStandardMaterial color=\"#5a67d8\" wireframe />\n      {/* <primitive object={scene} /> */}{/* Uncomment when model is available */}\n    </mesh>\n  );\n}\n\n// Preload the model if needed\n// useGLTF.preload('path/to/your/brain_model.glb'); // Uncomment when model is available\n\nexport function AnimatedBrain() {\n  return (\n    <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} intensity={1} />\n      <Suspense fallback={null}> {/* Suspense for model loading */}\n        <BrainModel />\n      </Suspense>\n      <OrbitControls enableZoom={false} enablePan={false} autoRotate autoRotateSpeed={1.0} />\n    </Canvas>\n  );\n}\n 